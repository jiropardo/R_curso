#| include: false
library(tidyverse)
library(readxl)
library(flextable)
df <- read_excel("../ventas_simuladas_tarea.xlsx")
View(df)
View(df)
fecha_analisis <- as.Date(sprintf("%d-%02d-01", anio_analisis, match(mes_analisis, meses_es))) # 2025-02-01
mes_analisis <- "Febrero"
anio_analisis <- 2025
meses_es <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio","Julio", "Agosto", "Septiembre", "Octubre","Noviembre","Diciembre")
fecha_analisis <- as.Date(sprintf("%d-%02d-01", anio_analisis, match(mes_analisis, meses_es))) # 2025-02-01
datos_totales <- df %>% group_by(Fecha) %>%
summarise(Total_Ventas= sum(Ventas)) %>%
mutate(Mes= month(Fecha, label=TRUE, abbr = FALSE),
Año= year(Fecha))
View(datos_totales)
View(datos_totales)
View(datos_totales)
View(datos_totales)
View(datos_totales)
View(df)
View(df)
View(datos_totales)
View(df)
View(datos_totales)
View(df)
View(datos_totales)
View(df)
View(df)
datos_totales_filtrados <- datos_totales %>% filter(Fecha <=fecha_analisis)
View(datos_totales_filtrados)
View(datos_totales_filtrados)
View(datos_totales_filtrados)
View(datos_totales_filtrados)
View(datos_totales_filtrados)
View(datos_totales_filtrados)
View(datos_totales_filtrados)
View(datos_totales)
# Calculo de diferencias
acumulado_anual <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
# Preparar un cuadro acumulado de calculo anual
acumulado_anual <- datos_totales %>%      filter(month(Fecha)<=month(fecha_analisis)) %>%
group_by(Año) %>% summarise(Ventas_totales= sum(Total_Ventas)) %>% arrange(Año)
# Calculo de diferencias
acumulado_anual <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
# Preparar un cuadro acumulado de calculo anual
acumulado_anual <- datos_totales %>%      filter(month(Fecha)<=month(fecha_analisis)) %>%
group_by(Año) %>% summarise(Ventas_totales= sum(Total_Ventas)) %>% arrange(Año)
# Calculo de diferencias
acumulado_anual <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
View(acumulado_anual)
View(acumulado_anual)
View(acumulado_anual)
View(acumulado_anual)
# Preparar un cuadro acumulado de calculo anual
acumulado_anual <- datos_totales %>%      filter(month(Fecha)<=month(fecha_analisis)) %>%
group_by(Año) %>% summarise(Ventas_totales= sum(Total_Ventas)) %>% arrange(Año)
# Calculo de diferencias
#acumulado_anual <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
#      Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
View(acumulado_anual)
# Preparar un cuadro acumulado de calculo anual
# ventas_totales_por_anio
acumulado_anual <- datos_totales %>%      filter(month(Fecha)<=month(fecha_analisis)) %>%
group_by(Año) %>% summarise(Ventas_totales= sum(Total_Ventas)) %>% arrange(Año)
# Calculo de diferencias
acumulado_anual_diferencias <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
View(acumulado_anual_diferencias)
#| include: false
# Función personalizada para agregar el símbolo de porcentaje
formato_porcentaje <- function(x) {
paste0(round(x, 2), "%")
}
#| include: false
# Función personalizada para agregar el símbolo de porcentaje
formato_porcentaje <- function(x) {
paste0(round(x, 2), "%")
}
#| echo: false
ft <- flextable(acumulado_anual)
ft <- autofit(ft)
ft <- colformat_num(ft, j = "Dif_por", digits = 2, suffix = "%", na_str = "-")
#| echo: false
ft <- flextable(acumulado_anual)
ft <- autofit(ft)
ft <- colformat_num(ft, j = "Dif_por", digits = 2, suffix = "%", na_str = "-")
#| echo: false
ft <- flextable(acumulado_anual_diferencias)
ft <- autofit(ft)
ft <- colformat_num(ft, j = "Dif_por", digits = 2, suffix = "%", na_str = "-")
ft
El acumulado al mes de `r mes_analisis` del año `r anio_analisis` fue de `r format(tail(acumulado_anual$Ventas_totales,1), big.mark=",")`. Respecto al año anterior se `r selecciona_sinonimo(tail(acumulado_anual$Dif_abs,1),2)` las ventas en un `r tail(acumulado_anual$Dif_por,1)`%
ventas_totales_mes <- datos_totales %>% filter(Fecha==fecha_analisis)
ventas_totales_mes_anterior <- datos_totales %>% filter(Fecha== fecha_analisis %m-% months(1))
ventas_dif_mes <- rbind(ventas_totales_mes_anterior,ventas_totales_mes)
# Calculo de diferencias
ventas_dif_mes <- ventas_dif_mes %>% mutate(Dif_abs=Total_Ventas-lag(Total_Ventas),
Dif_por= round((Total_Ventas/lag(Total_Ventas)-1)*100,2                                        ))
#| include: false
library(tidyverse)
library(readxl)
library(flextable)
df <- read_excel("../ventas_simuladas_tarea.xlsx")
mes_analisis <- "Febrero"
anio_analisis <- 2025
meses_es <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio","Julio", "Agosto", "Septiembre", "Octubre","Noviembre","Diciembre")
fecha_analisis <- as.Date(sprintf("%d-%02d-01", anio_analisis, match(mes_analisis, meses_es))) # 2025-02-01
datos_totales <- df %>% group_by(Fecha) %>%
summarise(Total_Ventas= sum(Ventas)) %>%
mutate(Mes= month(Fecha, label=TRUE, abbr = FALSE),
Año= year(Fecha))
datos_totales_filtrados <- datos_totales %>% filter(Fecha <=fecha_analisis)
# Preparar un cuadro acumulado de calculo anual
# ventas_totales_por_anio
acumulado_anual <- datos_totales %>%      filter(month(Fecha)<=month(fecha_analisis)) %>%
group_by(Año) %>% summarise(Ventas_totales= sum(Total_Ventas)) %>% arrange(Año)
# Calculo de diferencias
acumulado_anual_diferencias <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
#| include: false
# Función personalizada para agregar el símbolo de porcentaje
formato_porcentaje <- function(x) {
paste0(round(x, 2), "%")
}
#| include: false
selecciona_sinonimo <- function(valor, posicion) {
if (is.na(valor)) {
return("sin datos para comparar")
}
if (valor > 0) {
sinonimos <- c("crecimiento", "incremento", "aumento", "ascenso")
} else if (valor < 0) {
sinonimos <- c("decrecimiento", "disminución", "reducción", "descenso")
} else {
return("sin cambio")
}
if (missing(posicion)) {
# Si no se proporciona "posicion", se elige uno aleatoriamente.
return(sample(sinonimos, 1))
} else if (posicion > 0 && posicion <= length(sinonimos)) {
return(sinonimos[posicion])
} else {
warning("La posición especificada no es válida. Se seleccionará un sinónimo aleatoriamente.")
return(sample(sinonimos, 1))
}
}
#| echo: false
ft <- flextable(acumulado_anual_diferencias)
ft <- autofit(ft)
ft <- colformat_num(ft, j = "Dif_por", digits = 2, suffix = "%", na_str = "-")
ft
ventas_totales_mes <- datos_totales %>% filter(Fecha==fecha_analisis)
ventas_totales_mes_anterior <- datos_totales %>% filter(Fecha== fecha_analisis %m-% months(1))
ventas_dif_mes <- rbind(ventas_totales_mes_anterior,ventas_totales_mes)
# Calculo de diferencias
ventas_dif_mes <- ventas_dif_mes %>% mutate(Dif_abs=Total_Ventas-lag(Total_Ventas),
Dif_por= round((Total_Ventas/lag(Total_Ventas)-1)*100,2                                        ))
ventas_totales_mes <- datos_totales %>% filter(Fecha==fecha_analisis)
ventas_totales_mes_anterior_interanual <- datos_totales %>% filter(Fecha== fecha_analisis %m-% years(1))
ventas_dif_mes_interanual <- rbind(ventas_totales_mes_anterior_interanual,ventas_totales_mes)
# Calculo de diferencias
ventas_dif_mes_interanual <- ventas_dif_mes_interanual %>% mutate(Dif_abs=Total_Ventas-lag(Total_Ventas),
Dif_por= round((Total_Ventas/lag(Total_Ventas)-1)*100,2                                        ))
format(tail(acumulado_anual_diferencias$Ventas_totales,1), big.mark=",")
#| include: false
library(tidyverse)
library(readxl)
library(flextable)
df <- read_excel("../ventas_simuladas_tarea.xlsx")
mes_analisis <- "Febrero"
anio_analisis <- 2025
meses_es <- c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio","Julio", "Agosto", "Septiembre", "Octubre","Noviembre","Diciembre")
fecha_analisis <- as.Date(sprintf("%d-%02d-01", anio_analisis, match(mes_analisis, meses_es))) # 2025-02-01
datos_totales <- df %>% group_by(Fecha) %>%
summarise(Total_Ventas= sum(Ventas)) %>%
mutate(Mes= month(Fecha, label=TRUE, abbr = FALSE),
Año= year(Fecha))
datos_totales_filtrados <- datos_totales %>% filter(Fecha <=fecha_analisis)
# Preparar un cuadro acumulado de calculo anual
# ventas_totales_por_anio
acumulado_anual <- datos_totales %>%      filter(month(Fecha)<=month(fecha_analisis)) %>%
group_by(Año) %>% summarise(Ventas_totales= sum(Total_Ventas)) %>% arrange(Año)
# Calculo de diferencias
acumulado_anual_diferencias <- acumulado_anual %>% mutate(Dif_abs=Ventas_totales-lag(Ventas_totales),
Dif_por= round((Ventas_totales/lag(Ventas_totales)-1)*100,2                                        ))
#| include: false
# Función personalizada para agregar el símbolo de porcentaje
formato_porcentaje <- function(x) {
paste0(round(x, 2), "%")
}
#| include: false
selecciona_sinonimo <- function(valor, posicion) {
if (is.na(valor)) {
return("sin datos para comparar")
}
if (valor > 0) {
sinonimos <- c("crecimiento", "incremento", "aumento", "ascenso")
} else if (valor < 0) {
sinonimos <- c("decrecimiento", "disminución", "reducción", "descenso")
} else {
return("sin cambio")
}
if (missing(posicion)) {
# Si no se proporciona "posicion", se elige uno aleatoriamente.
return(sample(sinonimos, 1))
} else if (posicion > 0 && posicion <= length(sinonimos)) {
return(sinonimos[posicion])
} else {
warning("La posición especificada no es válida. Se seleccionará un sinónimo aleatoriamente.")
return(sample(sinonimos, 1))
}
}
#| echo: false
ft <- flextable(acumulado_anual_diferencias)
ft <- autofit(ft)
ft <- colformat_num(ft, j = "Dif_por", digits = 2, suffix = "%", na_str = "-")
ft
ventas_totales_mes <- datos_totales %>% filter(Fecha==fecha_analisis)
ventas_totales_mes_anterior <- datos_totales %>% filter(Fecha== fecha_analisis %m-% months(1))
ventas_dif_mes <- rbind(ventas_totales_mes_anterior,ventas_totales_mes)
# Calculo de diferencias
ventas_dif_mes <- ventas_dif_mes %>% mutate(Dif_abs=Total_Ventas-lag(Total_Ventas),
Dif_por= round((Total_Ventas/lag(Total_Ventas)-1)*100,2                                        ))
ventas_totales_mes <- datos_totales %>% filter(Fecha==fecha_analisis)
ventas_totales_mes_anterior_interanual <- datos_totales %>% filter(Fecha== fecha_analisis %m-% years(1))
ventas_dif_mes_interanual <- rbind(ventas_totales_mes_anterior_interanual,ventas_totales_mes)
# Calculo de diferencias
ventas_dif_mes_interanual <- ventas_dif_mes_interanual %>% mutate(Dif_abs=Total_Ventas-lag(Total_Ventas),
Dif_por= round((Total_Ventas/lag(Total_Ventas)-1)*100,2                                        ))
View(acumulado_anual)
View(acumulado_anual_diferencias)
View(datos_totales)
View(datos_totales)
View(df)
